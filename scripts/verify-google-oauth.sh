#!/bin/bash

# Script de Verifica√ß√£o de Configura√ß√£o Google OAuth
# MoncoyFinance

echo "üîç Verificando Configura√ß√£o do Google OAuth..."
echo "================================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar vari√°veis de ambiente
echo "üìã Passo 1: Verificando vari√°veis de ambiente"
echo "----------------------------------------------"

if [ -f .env.local ]; then
    echo -e "${GREEN}‚úì${NC} Arquivo .env.local encontrado"
    
    if grep -q "NEXT_PUBLIC_SUPABASE_URL" .env.local; then
        SUPABASE_URL=$(grep "NEXT_PUBLIC_SUPABASE_URL" .env.local | cut -d '=' -f2)
        echo -e "${GREEN}‚úì${NC} NEXT_PUBLIC_SUPABASE_URL: ${SUPABASE_URL}"
    else
        echo -e "${RED}‚úó${NC} NEXT_PUBLIC_SUPABASE_URL n√£o encontrado"
    fi
    
    if grep -q "NEXT_PUBLIC_SUPABASE_ANON_KEY" .env.local; then
        echo -e "${GREEN}‚úì${NC} NEXT_PUBLIC_SUPABASE_ANON_KEY: Configurado"
    else
        echo -e "${RED}‚úó${NC} NEXT_PUBLIC_SUPABASE_ANON_KEY n√£o encontrado"
    fi
else
    echo -e "${RED}‚úó${NC} Arquivo .env.local N√ÉO encontrado"
fi

echo ""

# Verificar callback URL
echo "üîó Passo 2: URL de Callback Necess√°ria"
echo "--------------------------------------"
echo "Adicione esta URL no Google Cloud Console:"
echo -e "${YELLOW}${SUPABASE_URL}/auth/v1/callback${NC}"
echo ""
echo "Caminho no Google Cloud:"
echo "APIs & Services ‚Üí Credentials ‚Üí OAuth 2.0 Client IDs"
echo "‚Üí Authorized redirect URIs"
echo ""

# Verificar servidor
echo "üñ•Ô∏è  Passo 3: Verificando servidor Next.js"
echo "-----------------------------------------"

if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${GREEN}‚úì${NC} Servidor rodando na porta 3000"
    echo "Acesse: http://localhost:3000/login"
else
    echo -e "${YELLOW}‚ö†${NC} Servidor N√ÉO est√° rodando na porta 3000"
    echo "Execute: pnpm dev"
fi

echo ""

# Checklist
echo "‚úÖ Checklist de Configura√ß√£o"
echo "----------------------------"
echo "[ ] Google Cloud Console: OAuth 2.0 Client ID criado"
echo "[ ] Redirect URI adicionado: ${SUPABASE_URL}/auth/v1/callback"
echo "[ ] Supabase Dashboard: Google provider ativado"
echo "[ ] Supabase: Client ID e Secret configurados"
echo "[ ] Teste: Login com Google funcionando"
echo ""

# URLs √∫teis
echo "üîó Links √öteis"
echo "--------------"
echo "Google Cloud Console:"
echo "  https://console.cloud.google.com/apis/credentials"
echo ""
echo "Supabase Dashboard:"
echo "  https://supabase.com/dashboard/project/dxdbpppymxfiojszrmir/auth/providers"
echo ""
echo "Documenta√ß√£o:"
echo "  docs/FIX-GOOGLE-OAUTH-ERROR.md"
echo ""

# Teste de conectividade
echo "üß™ Passo 4: Testando conectividade com Supabase"
echo "------------------------------------------------"

if command -v curl &> /dev/null; then
    RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${SUPABASE_URL}/rest/v1/" -H "apikey: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}" 2>/dev/null)
    
    if [ "$RESPONSE" = "200" ] || [ "$RESPONSE" = "401" ] || [ "$RESPONSE" = "404" ]; then
        echo -e "${GREEN}‚úì${NC} Supabase est√° acess√≠vel (HTTP ${RESPONSE})"
    else
        echo -e "${RED}‚úó${NC} Erro ao acessar Supabase (HTTP ${RESPONSE})"
    fi
else
    echo -e "${YELLOW}‚ö†${NC} curl n√£o instalado - n√£o foi poss√≠vel testar conectividade"
fi

echo ""
echo "================================================"
echo "‚ú® Verifica√ß√£o conclu√≠da!"
echo ""
echo "üí° Pr√≥ximo passo:"
echo "   1. Abra o Google Cloud Console (link acima)"
echo "   2. Configure o Redirect URI"
echo "   3. Teste o login: http://localhost:3000/login"
echo ""
